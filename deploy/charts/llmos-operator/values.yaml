# Default values for llmos-operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## @section Global parameters
## Please, note that this will override the parameters, including dependencies, configured to use the global value
global:
  ## @param global.imageRegistry Global Docker image registry
  ##
  imageRegistry: ""
  ## @param global.imagePullSecrets Global Docker registry secret names as an array
  ## e.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  imagePullPolicy: IfNotPresent
  ## @param global.storageClass Global StorageClass for Persistent Volume(s)
  ##
  storageClass: ""

nameOverride: ""
fullnameOverride: ""
depNameOverride: &depNameOverride "llmos"

operator:
  apiserver:
    replicaCount: 1
    image:
      repository: ghcr.io/llmos-ai/llmos-operator
      pullPolicy: Always
      # Overrides the image tag whose default is the chart appVersion.
      tag: "main-head"

    serviceAccount:
      # Specifies whether a service account should be created
      create: true
      # Automatically mount a ServiceAccount's API credentials?
      automount: true
      # Annotations to add to the service account
      annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name: &llmosServiceAccountName "llmos-cluster-admin"

    podAnnotations: {}
    podLabels: {}

    podSecurityContext: {}
      # fsGroup: 2000

    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000

    service:
      type: NodePort
      httpsPort: 8443
      httpsNodePort: 30443
      profilePort: 6060

    resources:
      requests:
        cpu: 200m
        memory: 450Mi
      limits:
        cpu: 2
        memory: 4Gi

    # Additional volumes on the output Deployment definition.
    volumes: []

    # Additional volumeMounts on the output Deployment definition.
    volumeMounts: []

    nodeSelector: {}

    tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Exists

    affinity: {}

    # This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
    livenessProbe:
      httpGet:
        path: /v1-cluster/readyz
        port: https
        scheme: HTTPS
    readinessProbe:
      httpGet:
        path: /v1-cluster/readyz
        port: https
        scheme: HTTPS

  webhook:
    replicaCount: 1
    image:
      repository: ghcr.io/llmos-ai/llmos-operator-webhook
      pullPolicy: Always
      # Overrides the image tag whose default is the chart appVersion.
      tag: "main-head"

    podSecurityContext: {}
    securityContext: {}

    service:
      type: ClusterIP
      webhookPort: 8444
      profilePort: 6060

    resources:
      requests:
        cpu: 200m
        memory: 250Mi
      limits:
        cpu: 1
        memory: 2Gi

    # Additional volumes on the output Deployment definition.
    volumes: []

    # Additional volumeMounts on the output Deployment definition.
    volumeMounts: []

    nodeSelector: {}

    tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Exists

    affinity: {}

    livenessProbe:
      tcpSocket:
        port: 8444
    readinessProbe:
      tcpSocket:
        port: 8444

systemChartsRepo:
  enabled: true
  image:
    repository: ghcr.io/llmos-ai/system-charts-repo
    tag: "main-head"
    pullPolicy: Always

  service:
    type: ClusterIP
    httpPort: 80

  resources:
    requests:
      cpu: 20m
      memory: 50Mi
    limits:
      cpu: 200m
      memory: 250Mi
  # Additional volumes on the output Deployment definition.
  volumes: []
  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  nodeSelector: {}
  tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
  affinity: {}
