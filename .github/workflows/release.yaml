name: release

concurrency:
  group: release
  cancel-in-progress: true

on:
  push:
    tags:
    - v*

permissions:
  contents: write
  packages: write

env:
  REGISTRY: ${{ vars.REGISTRY || 'ghcr.io/llmos-ai' }}
  DOCKER_REGISTRY: ${{ vars.DOCKER_REGISTRY || 'docker.io/llmos' }}
  S3_BUCKET_NAME: ${{ vars.S3_BUCKET_NAME }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.22
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3
      with:
        buildkitd-flags: --debug
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: docker.io
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Install GoReleaser
      uses: goreleaser/goreleaser-action@v6
      with:
        distribution: goreleaser
        version: latest
        install-only: true
    - name: Release Operator with GoReleaser
      run: make release-operator
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup Earthly
      uses: earthly/actions-setup@v1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        version: "latest"
    - name: Release system-charts repo Image
      run: make package-system-charts-repo
    - name: Release Installer Image & Upload Charts to S3
      run: make package-installer
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: 'us-east-1'
    - name: package node-upgrade Image
      run: make package-upgrade
    - name: Failure Slack Notification
      if: failure()
      id: slack-failure
      uses: slackapi/slack-github-action@v1.24.0
      with:
        channel-id: "${{ secrets.SLACK_BOT_FAILURE_CHANNEL }}"
        slack-message: "‚ùå Release failed: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
